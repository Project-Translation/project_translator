{
  "description.description": "Project Translator",
  "configuration.title": "Project Translator",
  "command.translateFolders": "Project Translator: Translate Folders",
  "command.translateProject": "Project Translator: Translate Project",
  "command.translateFiles": "Project Translator: Translate Files",
  "command.pauseTranslation": "Project Translator: Pause Translation",
  "command.resumeTranslation": "Project Translator: Resume Translation",
  "command.stopTranslation": "Project Translator: Stop Translation",
  "command.addFileToTranslationSettings": "Project Translator: Add to Project Translation",
  "command.addFolderToTranslationSettings": "Project Translator: Add to Project Translation",
  "command.exportSettingsToConfig": "Project Translator: Export Settings to project.translation.json",
  "config.sourceFolder.description": "Source folder path, used to store the last selected translation folder path",
  "config.targetFolders.description": "Translation target folder configuration, multiple target folders and their corresponding target languages can be specified",
  "config.translationIntervalDays.description": "Translation interval days, if the target file exists and has been translated within this number of days, it will be skipped",
  "config.currentVendor.description": "Currently used API vendor",
  "config.vendors.description": "API vendor configuration list",
  "config.vendor.name.description": "Name of the API vendor",
  "config.vendor.apiEndpoint.description": "API endpoint URL for the vendor",
  "config.vendor.apiKey.description": "API key for authentication with the vendor",
  "config.vendor.apiKeyEnvVarName.description": "Environment variable name that contains the API key, if not set, the API key will be used directly. Using env variables is recommended for security.",
  "config.vendor.model.description": "Model name to use for translation",
  "config.vendor.rpm.description": "Maximum requests per minute limit",
  "config.vendor.maxTokensPerSegment.description": "Maximum number of tokens per translation segment",
  "config.vendor.timeout.description": "Timeout in seconds for API requests",
  "config.vendor.temperature.description": "Temperature setting for the model (0-2), lower values produce more consistent outputs",
  "config.vendor.streamMode.description": "Enable streaming mode for real-time translation output as the model generates text",
  "config.systemPrompts.description": "System prompt array, used to guide the translation process. Can contain either prompt text directly or file paths (relative to workspace root). If empty, uses the default system prompt. Example: ['prompts/my-prompt.md', 'Direct prompt text']",
  "config.userPrompts.description": "User-defined prompt array, these prompts will be added after the system prompts during the translation process. Can contain either prompt text directly or file paths (relative to workspace root). Example: ['prompts/custom-instructions.md', 'Additional instructions']",
  "config.segmentationMarkers.description": "Segmentation markers configured by file type, supporting regular expressions",
  "config.language.description": "Language for the extension",
  "config.sourceFile.description": "Absolute path to source file",
  "config.targetFiles.description": "Target files configuration for file translation",
  "config.targetLanguage.description": "Target language code",
  "config.enableMetrics.description": "Enable or disable sending anonymous usage metrics to help improve the extension",
  "config.specifiedFiles.description": "Multiple source files with their corresponding destination files for translation",
  "config.specifiedFolders.description": "Multiple source folders with their corresponding destination folders for translation",
  "config.copyOnly.description": "Files and paths that should be copied to target location but not translated",
  "config.copyOnly.paths.description": "List of path patterns (glob syntax) for files that should be copied but not translated",  "config.copyOnly.extensions.description": "List of file extensions that should be copied but not translated",
  "config.ignore.description": "Files and paths that should be completely ignored (neither copied nor translated)",
  "config.ignore.paths.description": "List of path patterns (glob syntax) for files that should be completely ignored",
  "config.ignore.extensions.description": "List of file extensions that should be completely ignored",
  "config.diffApply.description": "(experimental) Git diff-based differential translation configuration. Compares the latest commit of source files with the commit recorded during target file translation to perform differential translation. If the file to be translated has no commits, differential parts will not be translated, as differential translation requires a recorded commit in history. Random modifications without forming historical records cannot be used for differential translation.",
  "config.diffApply.enabled.description": "(experimental) Enable differential translation based on git changes. When enabled, only translates the differences between the source file's latest commit and the commit recorded when the target file was last translated (default: false)",
  "config.diffApply.strategy.description": "(experimental) Strategy for detecting file differences: 'auto' (automatic), 'vscode-api' (VS Code Git API), 'git-command' (Git command line)",
  "config.diffApply.granularity.description": "(experimental) Granularity of difference detection: 'line' (line-level), 'block' (block-level), 'semantic' (semantic-level)",
  "config.diffApply.contextLines.description": "(experimental) Number of context lines to include around changes (default: 3)",
  "config.diffApply.fallbackToFullTranslation.description": "(experimental) Whether to fallback to full translation when differential translation fails (default: true)",
  "config.diffApply.strategy.auto.description": "(experimental) Automatically selects the best strategy (recommended)",
  "config.diffApply.strategy.vscode-api.description": "(experimental) Uses VS Code's built-in Git API for diffs (fast, but may be incomplete)",
  "config.diffApply.strategy.git-command.description": "(experimental) Executes the 'git diff' command directly to get differences (most accurate, but may be slower)",
  "config.diffApply.granularity.line.description": "(experimental) Detects differences at the line level",
  "config.diffApply.granularity.block.description": "(experimental) Detects differences at the code block level (experimental)",
  "config.diffApply.granularity.semantic.description": "(experimental) Detects differences at the semantic level (experimental, requires smarter models)"
}
