{
  "currentVendor": "grok",
  "vendors": [
    {
      "name": "gemini",
      "apiEndpoint": "https://generativelanguage.googleapis.com/v1beta",
      "apiKeyEnvVarName": "GEMINI_API_KEY",
      "model": "gemini-2.0-flash",
      "rpm": 15,
      "maxTokensPerSegment": 1000,
      "timeout": 30,
      "streamMode": true
    },
    {
      "name": "grok",
      "apiEndpoint": "https://api.x.ai/v1",
      "apiKeyEnvVarName": "GROK_API_KEY",
      "model": "grok-3-mini-fast",
      "rpm": 20,
      "maxTokensPerSegment": 1500,
      "timeout": 30,
      "temperature": 0,
      "streamMode": true
    },
    {
      "name": "deepseek",
      "apiEndpoint": "https://api.deepseek.com/v1",
      "apiKeyEnvVarName": "DEEPSEEK_API_KEY",
      "model": "deepseek-chat",
      "rpm": 0,
      "maxTokensPerSegment": 4000,
      "timeout": 30,
      "streamMode": true
    },
    {
      "name": "aliyun",
      "apiEndpoint": "https://dashscope.aliyuncs.com/compatible-mode/v1",
      "apiKeyEnvVarName": "QWEN_API_KEY",
      "model": "qwq-plus-latest",
      "rpm": 0,
      "maxTokensPerSegment": 400000,
      "timeout": 120,
      "streamMode": true
    },
    {
      "name": "siliconflow",
      "apiEndpoint": "https://api.siliconflow.cn/v1",
      "apiKeyEnvVarName": "SILICONFLOW_API_KEY",
      "model": "Qwen/Qwen3-30B-A3B",
      "rpm": 20,
      "maxTokensPerSegment": 3000,
      "timeout": 30,
      "streamMode": true
    }
  ],
  "specifiedFiles": [
    {
      "sourceFile": {
        "path": "../l10n/bundle.l10n.json",
        "lang": "en-us"
      },
      "destFiles": [
        {
          "path": "../l10n/bundle.l10n.zh-cn.json",
          "lang": "zh-cn"
        },
        {
          "path": "../l10n/bundle.l10n.zh-tw.json",
          "lang": "zh-tw"
        },
        {
          "path": "../l10n/bundle.l10n.ja-jp.json",
          "lang": "ja-jp"
        },
        {
          "path": "../l10n/bundle.l10n.ko-kr.json",
          "lang": "ko-kr"
        },
        {
          "path": "../l10n/bundle.l10n.fr-fr.json",
          "lang": "fr-fr"
        },
        {
          "path": "../l10n/bundle.l10n.de-de.json",
          "lang": "de-de"
        },
        {
          "path": "../l10n/bundle.l10n.es-es.json",
          "lang": "es-es"
        },
        {
          "path": "../l10n/bundle.l10n.pt-br.json",
          "lang": "pt-br"
        },
        {
          "path": "../l10n/bundle.l10n.ru-ru.json",
          "lang": "ru-ru"
        },
        {
          "path": "../l10n/bundle.l10n.ar-sa.json",
          "lang": "ar-sa"
        }
      ]
    },
    {
      "sourceFile": {
        "path": "../package.nls.json",
        "lang": "en-us"
      },
      "destFiles": [
        {
          "path": "../package.nls.zh-cn.json",
          "lang": "zh-cn"
        },
        {
          "path": "../package.nls.zh-tw.json",
          "lang": "zh-tw"
        },
        {
          "path": "../package.nls.ja-jp.json",
          "lang": "ja-jp"
        },
        {
          "path": "../package.nls.ko-kr.json",
          "lang": "ko-kr"
        },
        {
          "path": "../package.nls.fr-fr.json",
          "lang": "fr-fr"
        },
        {
          "path": "../package.nls.de-de.json",
          "lang": "de-de"
        },
        {
          "path": "../package.nls.es-es.json",
          "lang": "es-es"
        },
        {
          "path": "../package.nls.pt-br.json",
          "lang": "pt-br"
        },
        {
          "path": "../package.nls.ru-ru.json",
          "lang": "ru-ru"
        },
        {
          "path": "../package.nls.ar-sa.json",
          "lang": "ar-sa"
        }
      ]
    },
    {
      "sourceFile": {
        "path": "../README.md",
        "lang": "en-us"
      },
      "destFiles": [
        {
          "path": "../readmes/README.zh-cn.md",
          "lang": "zh-cn"
        },
        {
          "path": "../readmes/README.zh-tw.md",
          "lang": "zh-tw"
        },
        {
          "path": "../readmes/README.ja-jp.md",
          "lang": "ja-jp"
        },
        {
          "path": "../readmes/README.ko-kr.md",
          "lang": "ko-kr"
        },
        {
          "path": "../readmes/README.fr-fr.md",
          "lang": "fr-fr"
        },
        {
          "path": "../readmes/README.de-de.md",
          "lang": "de-de"
        },
        {
          "path": "../readmes/README.es-es.md",
          "lang": "es-es"
        },
        {
          "path": "../readmes/README.pt-br.md",
          "lang": "pt-br"
        },
        {
          "path": "../readmes/README.ru-ru.md",
          "lang": "ru-ru"
        },
        {
          "path": "../readmes/README.ar-sa.md",
          "lang": "ar-sa"
        }
      ]
    }
  ],
  "specifiedFolders": [
    {
      "sourceFolder": {
        "path": "embeded",
        "lang": "en-us"
      },
      "destFolders": [
        {
          "path": "embeded/zh-cn",
          "lang": "zh-cn"
        }
      ]
    },
    {
      "sourceFolder": {
        "path": "structure/json",
        "lang": "en-us"
      },
      "destFolders": [
        {
          "path": "i18n/zh-cn/structure/json",
          "lang": "zh-cn"
        }
      ]
    }
  ],
  "translationIntervalDays": 365,
  "copyOnly": {
    "paths": [],
    "extensions": [
      ".svg"
    ]
  },
  "ignore": {
    "paths": [
      "embeded/zh-cn/**"
    ],
    "extensions": [
      ".log"
    ]
  },
  "systemPrompts": [
    "你是一个熟悉各种结构化文档的专业翻译, 在翻译时严格遵循结构化文档的格式. 你需要将结构化文档的格式放在最高优先级, 在存在疑问时, 宁可不翻译, 也绝对不可破坏文档格式. 你需要保持'```'的数量和位置不变. 你只能在输入的待翻译内容中有'```'代码块时, 才允许输出'```'. 你需要遵循目标语言的表达习惯, 在翻译时, 保持格式和结构不变. 你只需要返回翻译后的内容, 不要添加任何额外的内容.",
    "在翻译时, 确保技术术语准确. 遵循目标语言表达惯例.",
    "Markdown 文件的front matter需要翻译, 并且只翻译值.",
    "**这是项目翻译器的业务逻辑部分，请勿删除此提示词**\n\n- 判断是否需要翻译，如果不需要, 则返回纯字符串响应'727d2eb8-8683-42bd-a1d0-f604fcd82163'，表示无需翻译。"
  ],
  "userPrompts": [
    "1. Should return no need translate if the markdown file has 'draft' set to 'true' in the front matter.",
    "2. './readmes/' in the sentences should replace with './'"
  ],
  "segmentationMarkers": {
    "markdown": [
      "^#\\s",
      "^##\\s",
      "^###\\s"
    ],
    "html": [
      "^<h1[^>]*>",
      "^<h2[^>]*>",
      "^<h3[^>]*>"
    ],
    "javascript": [
      "^function\\s+\\w+\\(",
      "^class\\s+\\w+"
    ],
    "typescript": [
      "^function\\s+\\w+\\(",
      "^class\\s+\\w+",
      "^interface\\s+\\w+"
    ],
    "python": [
      "^def\\s+\\w+\\(",
      "^class\\s+\\w+"
    ],
    "java": [
      "^public\\s+(class|interface|enum)\\s+\\w+",
      "^\\s*public\\s+\\w+\\s+\\w+\\("
    ],
    "go": [
      "^func\\s+\\w+\\(",
      "^type\\s+\\w+\\s+struct"
    ],
    "c#": [
      "^public\\s+(class|interface|enum)\\s+\\w+",
      "^\\s*public\\s+\\w+\\s+\\w+\\("
    ],
    "php": [
      "^function\\s+\\w+\\(",
      "^class\\s+\\w+"
    ],
    "ruby": [
      "^def\\s+\\w+",
      "^class\\s+\\w+"
    ],
    "rust": [
      "^fn\\s+\\w+",
      "^struct\\s+\\w+",
      "^enum\\s+\\w+"
    ],
    "swift": [
      "^func\\s+\\w+",
      "^class\\s+\\w+",
      "^struct\\s+\\w+"
    ],
    "kotlin": [
      "^fun\\s+\\w+",
      "^class\\s+\\w+"
    ],
    "plaintext": [
      "^\\s*$"
    ]
  }
}